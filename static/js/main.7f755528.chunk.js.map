{"version":3,"sources":["components/UsersList.js","components/ButtonFetchUsers.js","components/App.js","reportWebVitals.js","index.js"],"names":["UsersList","props","users","map","user","src","picture","large","alt","name","last","title","first","email","login","uuid","className","ButtonFetchUsers","onClick","click","API","App","state","handleDataFetch","fetch","then","response","ok","Error","status","json","data","results","person","push","setState","catch","err","console","log","this","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mPAaeA,G,MAXG,SAACC,GACjB,IAAMC,EAAQD,EAAMC,MAAMC,KAAI,SAACC,GAAD,OAC5B,+BACI,qBAAKC,IAAKD,EAAKE,QAAQC,MAAOC,IAAKJ,EAAKK,KAAKC,OAC/C,uCAAQN,EAAKK,KAAKE,MAAlB,YAA2BP,EAAKK,KAAKG,MAArC,YAA8CR,EAAKK,KAAKC,QACxD,sCAAON,EAAKS,WAHLT,EAAKU,MAAMC,SAMtB,OAAO,oBAAIC,UAAU,QAAd,SAAuBd,MCFjBe,EANU,SAAChB,GACtB,OACI,wBAAQiB,QAASjB,EAAMkB,MAAvB,8BCCFC,EAAM,uCAwCGC,E,4MArCbC,MAAQ,CACNpB,MAAO,I,EAGTqB,gBAAkB,WAChBC,MAAMJ,GACHK,MAAK,SAACC,GACL,GAAIA,EAASC,GACX,OAAOD,EAET,MAAME,MAAMF,EAASG,WAEtBJ,MAAK,SAACC,GAAD,OAAcA,EAASI,UAC5BL,MAAK,SAACM,GACL,IADc,EACR7B,EAAQ,EAAKoB,MAAMpB,MADX,cAEO6B,EAAKC,SAFZ,IAEd,2BAAmC,CAAC,IAAzBC,EAAwB,QACjC/B,EAAMgC,KAAKD,IAHC,8BAKd,EAAKE,SAAS,CACZjC,aAGHkC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,O,uDAI9B,IAAMnC,EAAQsC,KAAKlB,MAAMpB,MAEzB,OACE,gCACE,cAAC,EAAD,CAAkBiB,MAAOqB,KAAKjB,kBAC7BrB,EAAMuC,OAAS,cAAC,EAAD,CAAWvC,MAAOA,IAAY,Y,GAhCpCwC,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.7f755528.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst UsersList = (props) => {\r\n  const users = props.users.map((user) => (\r\n    <li key={user.login.uuid}>\r\n        <img src={user.picture.large} alt={user.name.last}/>\r\n      <h4>{`${user.name.title} ${user.name.first} ${user.name.last}`}</h4>\r\n      <p>{`${user.email}`}</p>\r\n    </li>\r\n  ));\r\n  return <ul className=\"users\">{users}</ul>;\r\n};\r\n\r\nexport default UsersList;\r\n","import React from 'react';\r\n\r\nconst ButtonFetchUsers = (props) => {\r\n    return ( \r\n        <button onClick={props.click}>GENERATE PERSON</button>\r\n     );\r\n}\r\n \r\nexport default ButtonFetchUsers;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport UsersList from \"./UsersList\";\nimport ButtonFetchUsers from \"./ButtonFetchUsers\";\n\nconst API = \"https://randomuser.me/api/?results=1\";\n\nclass App extends Component {\n  state = {\n    users: []\n  };\n\n  handleDataFetch = () => {\n    fetch(API)\n      .then((response) => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error(response.status);\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        const users = this.state.users;\n        for (const person of data.results) {\n          users.push(person);\n        }\n        this.setState({\n          users\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    const users = this.state.users;\n\n    return (\n      <div>\n        <ButtonFetchUsers click={this.handleDataFetch} />\n        {users.length ? <UsersList users={users} /> : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}